/*
 SMBloodPressure.m
 SMARTFramework
 
 Generated by build-obj-c-classes.py on 2013-06-14.
 Copyright (c) 2013 CHIP, Boston Children's Hospital
 
 This library is free software; you can redistribute it and/or
 modify it under the terms of the GNU Lesser General Public
 License as published by the Free Software Foundation; either
 version 2.1 of the License, or (at your option) any later version.
 
 This library is distributed in the hope that it will be useful,
 but WITHOUT ANY WARRANTY; without even the implied warranty of
 MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 Lesser General Public License for more details.
 
 You should have received a copy of the GNU Lesser General Public
 License along with this library; if not, write to the Free Software
 Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA
 */

#import "SMBloodPressure.h"
#import "SMARTObjects.h"

#import <Redland-ObjC.h>


@implementation SMBloodPressure


#pragma mark - Synthesized Lazy Getter
@synthesize bodyPosition = _bodyPosition;

- (SMCodedValue *)bodyPosition
{
	if (!_bodyPosition) {
		
		// get the "bodyPosition" element
		RedlandNode *predicate = [RedlandNode nodeWithURIString:@"http://smartplatforms.org/terms#bodyPosition"];
		RedlandStatement *statement = [RedlandStatement statementWithSubject:self.subject predicate:predicate object:nil];
		RedlandStreamEnumerator *query = [self.inModel enumeratorOfStatementsLike:statement];
		RedlandStatement *rslt = [query nextObject];
		
		// create an item for this object
		SMCodedValue *obj = [SMCodedValue newWithSubject:rslt.object inModel:self.inModel];
		_bodyPosition = obj ? obj : (id)[NSNull null];
	}
	
	// we use NSNull as a placeholder in case we already searched the graph and haven't found the object. This should help with performance.
	if ((id)[NSNull null] == _bodyPosition) {
		return nil;
	}
	
	return _bodyPosition;
}

- (void)setBodyPosition:(SMCodedValue *)bodyPosition
{
	if (bodyPosition != _bodyPosition) {
		RedlandNode *predicate = (bodyPosition || _bodyPosition) ? [RedlandNode nodeWithURIString:@"http://smartplatforms.org/terms#bodyPosition"] : nil;
		if (_bodyPosition) {
			[self.inModel removeSubmodel:_bodyPosition.model];
			[self.inModel removeStatementsLike:[RedlandStatement statementWithSubject:self.subject predicate:predicate object:nil]];
		}
		
		_bodyPosition = bodyPosition;
		
		if (_bodyPosition) {
			[self.inModel addStatement:[RedlandStatement statementWithSubject:self.subject predicate:predicate object:_bodyPosition.subject]];
			[self.inModel addSubmodel:_bodyPosition.model];
		}
	}
}

@synthesize bodySite = _bodySite;

- (SMCodedValue *)bodySite
{
	if (!_bodySite) {
		
		// get the "bodySite" element
		RedlandNode *predicate = [RedlandNode nodeWithURIString:@"http://smartplatforms.org/terms#bodySite"];
		RedlandStatement *statement = [RedlandStatement statementWithSubject:self.subject predicate:predicate object:nil];
		RedlandStreamEnumerator *query = [self.inModel enumeratorOfStatementsLike:statement];
		RedlandStatement *rslt = [query nextObject];
		
		// create an item for this object
		SMCodedValue *obj = [SMCodedValue newWithSubject:rslt.object inModel:self.inModel];
		_bodySite = obj ? obj : (id)[NSNull null];
	}
	
	// we use NSNull as a placeholder in case we already searched the graph and haven't found the object. This should help with performance.
	if ((id)[NSNull null] == _bodySite) {
		return nil;
	}
	
	return _bodySite;
}

- (void)setBodySite:(SMCodedValue *)bodySite
{
	if (bodySite != _bodySite) {
		RedlandNode *predicate = (bodySite || _bodySite) ? [RedlandNode nodeWithURIString:@"http://smartplatforms.org/terms#bodySite"] : nil;
		if (_bodySite) {
			[self.inModel removeSubmodel:_bodySite.model];
			[self.inModel removeStatementsLike:[RedlandStatement statementWithSubject:self.subject predicate:predicate object:nil]];
		}
		
		_bodySite = bodySite;
		
		if (_bodySite) {
			[self.inModel addStatement:[RedlandStatement statementWithSubject:self.subject predicate:predicate object:_bodySite.subject]];
			[self.inModel addSubmodel:_bodySite.model];
		}
	}
}

@synthesize diastolic = _diastolic;

- (SMVitalSign *)diastolic
{
	if (!_diastolic) {
		
		// get the "diastolic" element
		RedlandNode *predicate = [RedlandNode nodeWithURIString:@"http://smartplatforms.org/terms#diastolic"];
		RedlandStatement *statement = [RedlandStatement statementWithSubject:self.subject predicate:predicate object:nil];
		RedlandStreamEnumerator *query = [self.inModel enumeratorOfStatementsLike:statement];
		RedlandStatement *rslt = [query nextObject];
		
		// create an item for this object
		SMVitalSign *obj = [SMVitalSign newWithSubject:rslt.object inModel:self.inModel];
		_diastolic = obj ? obj : (id)[NSNull null];
	}
	
	// we use NSNull as a placeholder in case we already searched the graph and haven't found the object. This should help with performance.
	if ((id)[NSNull null] == _diastolic) {
		return nil;
	}
	
	return _diastolic;
}

- (void)setDiastolic:(SMVitalSign *)diastolic
{
	if (diastolic != _diastolic) {
		RedlandNode *predicate = (diastolic || _diastolic) ? [RedlandNode nodeWithURIString:@"http://smartplatforms.org/terms#diastolic"] : nil;
		if (_diastolic) {
			[self.inModel removeSubmodel:_diastolic.model];
			[self.inModel removeStatementsLike:[RedlandStatement statementWithSubject:self.subject predicate:predicate object:nil]];
		}
		
		_diastolic = diastolic;
		
		if (_diastolic) {
			[self.inModel addStatement:[RedlandStatement statementWithSubject:self.subject predicate:predicate object:_diastolic.subject]];
			[self.inModel addSubmodel:_diastolic.model];
		}
	}
}

@synthesize method = _method;

- (SMCodedValue *)method
{
	if (!_method) {
		
		// get the "method" element
		RedlandNode *predicate = [RedlandNode nodeWithURIString:@"http://smartplatforms.org/terms#method"];
		RedlandStatement *statement = [RedlandStatement statementWithSubject:self.subject predicate:predicate object:nil];
		RedlandStreamEnumerator *query = [self.inModel enumeratorOfStatementsLike:statement];
		RedlandStatement *rslt = [query nextObject];
		
		// create an item for this object
		SMCodedValue *obj = [SMCodedValue newWithSubject:rslt.object inModel:self.inModel];
		_method = obj ? obj : (id)[NSNull null];
	}
	
	// we use NSNull as a placeholder in case we already searched the graph and haven't found the object. This should help with performance.
	if ((id)[NSNull null] == _method) {
		return nil;
	}
	
	return _method;
}

- (void)setMethod:(SMCodedValue *)method
{
	if (method != _method) {
		RedlandNode *predicate = (method || _method) ? [RedlandNode nodeWithURIString:@"http://smartplatforms.org/terms#method"] : nil;
		if (_method) {
			[self.inModel removeSubmodel:_method.model];
			[self.inModel removeStatementsLike:[RedlandStatement statementWithSubject:self.subject predicate:predicate object:nil]];
		}
		
		_method = method;
		
		if (_method) {
			[self.inModel addStatement:[RedlandStatement statementWithSubject:self.subject predicate:predicate object:_method.subject]];
			[self.inModel addSubmodel:_method.model];
		}
	}
}

@synthesize systolic = _systolic;

- (SMVitalSign *)systolic
{
	if (!_systolic) {
		
		// get the "systolic" element
		RedlandNode *predicate = [RedlandNode nodeWithURIString:@"http://smartplatforms.org/terms#systolic"];
		RedlandStatement *statement = [RedlandStatement statementWithSubject:self.subject predicate:predicate object:nil];
		RedlandStreamEnumerator *query = [self.inModel enumeratorOfStatementsLike:statement];
		RedlandStatement *rslt = [query nextObject];
		
		// create an item for this object
		SMVitalSign *obj = [SMVitalSign newWithSubject:rslt.object inModel:self.inModel];
		_systolic = obj ? obj : (id)[NSNull null];
	}
	
	// we use NSNull as a placeholder in case we already searched the graph and haven't found the object. This should help with performance.
	if ((id)[NSNull null] == _systolic) {
		return nil;
	}
	
	return _systolic;
}

- (void)setSystolic:(SMVitalSign *)systolic
{
	if (systolic != _systolic) {
		RedlandNode *predicate = (systolic || _systolic) ? [RedlandNode nodeWithURIString:@"http://smartplatforms.org/terms#systolic"] : nil;
		if (_systolic) {
			[self.inModel removeSubmodel:_systolic.model];
			[self.inModel removeStatementsLike:[RedlandStatement statementWithSubject:self.subject predicate:predicate object:nil]];
		}
		
		_systolic = systolic;
		
		if (_systolic) {
			[self.inModel addStatement:[RedlandStatement statementWithSubject:self.subject predicate:predicate object:_systolic.subject]];
			[self.inModel addSubmodel:_systolic.model];
		}
	}
}



#pragma mark - Class Properties
+ (NSString *)rdfType
{
	return @"http://smartplatforms.org/terms#BloodPressure";
}




@end
