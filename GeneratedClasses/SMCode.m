/*
 SMCode.m
 SMARTFramework
 
 Generated by build-obj-c-classes.py on 2013-06-14.
 Copyright (c) 2013 CHIP, Boston Children's Hospital
 
 This library is free software; you can redistribute it and/or
 modify it under the terms of the GNU Lesser General Public
 License as published by the Free Software Foundation; either
 version 2.1 of the License, or (at your option) any later version.
 
 This library is distributed in the hope that it will be useful,
 but WITHOUT ANY WARRANTY; without even the implied warranty of
 MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 Lesser General Public License for more details.
 
 You should have received a copy of the GNU Lesser General Public
 License along with this library; if not, write to the Free Software
 Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA
 */

#import "SMCode.h"
#import "SMARTObjects.h"

#import <Redland-ObjC.h>


@implementation SMCode


#pragma mark - Synthesized Lazy Getter
@synthesize identifier = _identifier;

- (NSString *)identifier
{
	if (!_identifier) {
		RedlandNode *predicate = [RedlandNode nodeWithURIString:@"http://purl.org/dc/terms/identifier"];
		RedlandStatement *statement = [RedlandStatement statementWithSubject:self.subject predicate:predicate object:nil];
		RedlandStreamEnumerator *query = [self.inModel enumeratorOfStatementsLike:statement];
		
		RedlandStatement *rslt = [query nextObject];
		_identifier = [rslt.object literalValue];
	}
	return _identifier;
}

- (void)setIdentifier:(NSString *)identifier
{
	if (identifier != _identifier) {
		RedlandNode *predicate = (identifier || _identifier) ? [RedlandNode nodeWithURIString:@"http://purl.org/dc/terms/identifier"] : nil;
		if (_identifier) {
			[self.inModel removeStatementsLike:[RedlandStatement statementWithSubject:self.subject predicate:predicate object:nil]];
		}
		
		_identifier = [identifier copy];
		
		if (_identifier) {
			[self.inModel addStatement:[RedlandStatement statementWithSubject:self.subject predicate:predicate object:[_identifier nodeValue]]];
		}
	}
}

@synthesize system = _system;

- (NSString *)system
{
	if (!_system) {
		RedlandNode *predicate = [RedlandNode nodeWithURIString:@"http://smartplatforms.org/terms#system"];
		RedlandStatement *statement = [RedlandStatement statementWithSubject:self.subject predicate:predicate object:nil];
		RedlandStreamEnumerator *query = [self.inModel enumeratorOfStatementsLike:statement];
		
		RedlandStatement *rslt = [query nextObject];
		_system = [rslt.object literalValue];
	}
	return _system;
}

- (void)setSystem:(NSString *)system
{
	if (system != _system) {
		RedlandNode *predicate = (system || _system) ? [RedlandNode nodeWithURIString:@"http://smartplatforms.org/terms#system"] : nil;
		if (_system) {
			[self.inModel removeStatementsLike:[RedlandStatement statementWithSubject:self.subject predicate:predicate object:nil]];
		}
		
		_system = [system copy];
		
		if (_system) {
			[self.inModel addStatement:[RedlandStatement statementWithSubject:self.subject predicate:predicate object:[_system nodeValue]]];
		}
	}
}

@synthesize title = _title;

- (NSString *)title
{
	if (!_title) {
		RedlandNode *predicate = [RedlandNode nodeWithURIString:@"http://purl.org/dc/terms/title"];
		RedlandStatement *statement = [RedlandStatement statementWithSubject:self.subject predicate:predicate object:nil];
		RedlandStreamEnumerator *query = [self.inModel enumeratorOfStatementsLike:statement];
		
		RedlandStatement *rslt = [query nextObject];
		_title = [rslt.object literalValue];
	}
	return _title;
}

- (void)setTitle:(NSString *)title
{
	if (title != _title) {
		RedlandNode *predicate = (title || _title) ? [RedlandNode nodeWithURIString:@"http://purl.org/dc/terms/title"] : nil;
		if (_title) {
			[self.inModel removeStatementsLike:[RedlandStatement statementWithSubject:self.subject predicate:predicate object:nil]];
		}
		
		_title = [title copy];
		
		if (_title) {
			[self.inModel addStatement:[RedlandStatement statementWithSubject:self.subject predicate:predicate object:[_title nodeValue]]];
		}
	}
}



#pragma mark - Class Properties
+ (NSString *)rdfType
{
	return @"http://smartplatforms.org/terms#Code";
}




@end
