/*
 SMVitalSign.m
 SMARTFramework
 
 Generated by build-obj-c-classes.py on 2013-06-14.
 Copyright (c) 2013 CHIP, Boston Children's Hospital
 
 This library is free software; you can redistribute it and/or
 modify it under the terms of the GNU Lesser General Public
 License as published by the Free Software Foundation; either
 version 2.1 of the License, or (at your option) any later version.
 
 This library is distributed in the hope that it will be useful,
 but WITHOUT ANY WARRANTY; without even the implied warranty of
 MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 Lesser General Public License for more details.
 
 You should have received a copy of the GNU Lesser General Public
 License along with this library; if not, write to the Free Software
 Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA
 */

#import "SMVitalSign.h"
#import "SMARTObjects.h"

#import <Redland-ObjC.h>


@implementation SMVitalSign


#pragma mark - Synthesized Lazy Getter
@synthesize unit = _unit;

- (NSString *)unit
{
	if (!_unit) {
		RedlandNode *predicate = [RedlandNode nodeWithURIString:@"http://smartplatforms.org/terms#unit"];
		RedlandStatement *statement = [RedlandStatement statementWithSubject:self.subject predicate:predicate object:nil];
		RedlandStreamEnumerator *query = [self.inModel enumeratorOfStatementsLike:statement];
		
		RedlandStatement *rslt = [query nextObject];
		_unit = [rslt.object literalValue];
	}
	return _unit;
}

- (void)setUnit:(NSString *)unit
{
	if (unit != _unit) {
		RedlandNode *predicate = (unit || _unit) ? [RedlandNode nodeWithURIString:@"http://smartplatforms.org/terms#unit"] : nil;
		if (_unit) {
			[self.inModel removeStatementsLike:[RedlandStatement statementWithSubject:self.subject predicate:predicate object:nil]];
		}
		
		_unit = [unit copy];
		
		if (_unit) {
			[self.inModel addStatement:[RedlandStatement statementWithSubject:self.subject predicate:predicate object:[_unit nodeValue]]];
		}
	}
}

@synthesize value = _value;

- (NSString *)value
{
	if (!_value) {
		RedlandNode *predicate = [RedlandNode nodeWithURIString:@"http://smartplatforms.org/terms#value"];
		RedlandStatement *statement = [RedlandStatement statementWithSubject:self.subject predicate:predicate object:nil];
		RedlandStreamEnumerator *query = [self.inModel enumeratorOfStatementsLike:statement];
		
		RedlandStatement *rslt = [query nextObject];
		_value = [rslt.object literalValue];
	}
	return _value;
}

- (void)setValue:(NSString *)value
{
	if (value != _value) {
		RedlandNode *predicate = (value || _value) ? [RedlandNode nodeWithURIString:@"http://smartplatforms.org/terms#value"] : nil;
		if (_value) {
			[self.inModel removeStatementsLike:[RedlandStatement statementWithSubject:self.subject predicate:predicate object:nil]];
		}
		
		_value = [value copy];
		
		if (_value) {
			[self.inModel addStatement:[RedlandStatement statementWithSubject:self.subject predicate:predicate object:[_value nodeValue]]];
		}
	}
}

@synthesize vitalName = _vitalName;

- (SMCodedValue *)vitalName
{
	if (!_vitalName) {
		
		// get the "vitalName" element
		RedlandNode *predicate = [RedlandNode nodeWithURIString:@"http://smartplatforms.org/terms#vitalName"];
		RedlandStatement *statement = [RedlandStatement statementWithSubject:self.subject predicate:predicate object:nil];
		RedlandStreamEnumerator *query = [self.inModel enumeratorOfStatementsLike:statement];
		RedlandStatement *rslt = [query nextObject];
		
		// create an item for this object
		SMCodedValue *obj = [SMCodedValue newWithSubject:rslt.object inModel:self.inModel];
		_vitalName = obj ? obj : (id)[NSNull null];
	}
	
	// we use NSNull as a placeholder in case we already searched the graph and haven't found the object. This should help with performance.
	if ((id)[NSNull null] == _vitalName) {
		return nil;
	}
	
	return _vitalName;
}

- (void)setVitalName:(SMCodedValue *)vitalName
{
	if (vitalName != _vitalName) {
		RedlandNode *predicate = (vitalName || _vitalName) ? [RedlandNode nodeWithURIString:@"http://smartplatforms.org/terms#vitalName"] : nil;
		if (_vitalName) {
			[self.inModel removeSubmodel:_vitalName.model];
			[self.inModel removeStatementsLike:[RedlandStatement statementWithSubject:self.subject predicate:predicate object:nil]];
		}
		
		_vitalName = vitalName;
		
		if (_vitalName) {
			[self.inModel addStatement:[RedlandStatement statementWithSubject:self.subject predicate:predicate object:_vitalName.subject]];
			[self.inModel addSubmodel:_vitalName.model];
		}
	}
}



#pragma mark - Class Properties
+ (NSString *)rdfType
{
	return @"http://smartplatforms.org/terms#VitalSign";
}




@end
