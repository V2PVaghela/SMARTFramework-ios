/*
 SMBloodPressure.m
 SMARTFramework
 
 Generated by build-obj-c-classes.py on 2012-10-17.
 Copyright (c) 2012 CHIP, Boston Children's Hospital
 
 This library is free software; you can redistribute it and/or
 modify it under the terms of the GNU Lesser General Public
 License as published by the Free Software Foundation; either
 version 2.1 of the License, or (at your option) any later version.
 
 This library is distributed in the hope that it will be useful,
 but WITHOUT ANY WARRANTY; without even the implied warranty of
 MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 Lesser General Public License for more details.
 
 You should have received a copy of the GNU Lesser General Public
 License along with this library; if not, write to the Free Software
 Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA
 */

#import "SMBloodPressure.h"
#import "SMARTObjects.h"

#import <Redland-ObjC.h>


@implementation SMBloodPressure


#pragma mark - Synthesized Lazy Getter
- (SMCodedValue *)bodyPosition
{
	if (!_bodyPosition) {
		
		// get the "bodyPosition" element
		RedlandNode *predicate = [RedlandNode nodeWithURIString:@"http://smartplatforms.org/terms#bodyPosition"];
		RedlandStatement *statement = [RedlandStatement statementWithSubject:self.subject predicate:predicate object:nil];
		RedlandStreamEnumerator *query = [self.model enumeratorOfStatementsLike:statement];
		RedlandStatement *rslt = [query nextObject];
		
		// create an item for this object
		self.bodyPosition = [SMCodedValue newWithSubject:rslt.object inModel:self.model];
	}
	return _bodyPosition;
}

- (SMCodedValue *)bodySite
{
	if (!_bodySite) {
		
		// get the "bodySite" element
		RedlandNode *predicate = [RedlandNode nodeWithURIString:@"http://smartplatforms.org/terms#bodySite"];
		RedlandStatement *statement = [RedlandStatement statementWithSubject:self.subject predicate:predicate object:nil];
		RedlandStreamEnumerator *query = [self.model enumeratorOfStatementsLike:statement];
		RedlandStatement *rslt = [query nextObject];
		
		// create an item for this object
		self.bodySite = [SMCodedValue newWithSubject:rslt.object inModel:self.model];
	}
	return _bodySite;
}

- (SMVitalSign *)diastolic
{
	if (!_diastolic) {
		
		// get the "diastolic" element
		RedlandNode *predicate = [RedlandNode nodeWithURIString:@"http://smartplatforms.org/terms#diastolic"];
		RedlandStatement *statement = [RedlandStatement statementWithSubject:self.subject predicate:predicate object:nil];
		RedlandStreamEnumerator *query = [self.model enumeratorOfStatementsLike:statement];
		RedlandStatement *rslt = [query nextObject];
		
		// create an item for this object
		self.diastolic = [SMVitalSign newWithSubject:rslt.object inModel:self.model];
	}
	return _diastolic;
}

- (SMCodedValue *)method
{
	if (!_method) {
		
		// get the "method" element
		RedlandNode *predicate = [RedlandNode nodeWithURIString:@"http://smartplatforms.org/terms#method"];
		RedlandStatement *statement = [RedlandStatement statementWithSubject:self.subject predicate:predicate object:nil];
		RedlandStreamEnumerator *query = [self.model enumeratorOfStatementsLike:statement];
		RedlandStatement *rslt = [query nextObject];
		
		// create an item for this object
		self.method = [SMCodedValue newWithSubject:rslt.object inModel:self.model];
	}
	return _method;
}

- (SMVitalSign *)systolic
{
	if (!_systolic) {
		
		// get the "systolic" element
		RedlandNode *predicate = [RedlandNode nodeWithURIString:@"http://smartplatforms.org/terms#systolic"];
		RedlandStatement *statement = [RedlandStatement statementWithSubject:self.subject predicate:predicate object:nil];
		RedlandStreamEnumerator *query = [self.model enumeratorOfStatementsLike:statement];
		RedlandStatement *rslt = [query nextObject];
		
		// create an item for this object
		self.systolic = [SMVitalSign newWithSubject:rslt.object inModel:self.model];
	}
	return _systolic;
}



#pragma mark - Class Properties
+ (NSString *)rdfType
{
	return @"http://smartplatforms.org/terms#BloodPressure";
}




@end
